stages:
  - image
  - deps
  - build
  - test
  - release

variables:
  MIX_ENV: test
  MIX_HOME: $CI_PROJECT_DIR/.mix
  ELIXIR_VERSION: 1.14.3
  OTP_VERSION: 25.0.4
  DEBIAN_VERSION: bullseye-20220801-slim
  BUILDER_IMAGE: $CI_REGISTRY/$CI_PROJECT_PATH/builder:${ELIXIR_VERSION}-erlang-${OTP_VERSION}-debian-${DEBIAN_VERSION}

build image:
  stage: image
  image: quay.io/podman/stable
  script:
    - echo $CI_REGISTRY_PASSWORD | podman login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    - podman build --file build.Dockerfile --tag $BUILDER_IMAGE --build-arg ELIXIR_VERSION=$ELIXIR_VERSION --build-arg OTP_VERSION=$OTP_VERSION --build-arg DEBIAN_VERSION=$DEBIAN_VERSION .
    - podman push $BUILDER_IMAGE
  rules:
    - changes:
        - .gitlab-ci.yml
        - build.Dockerfile

deps:elixir:
  stage: deps
  image: $BUILDER_IMAGE
  before_script:
    - mix local.hex --force
    - mix local.rebar --force
  script:
    - mix deps.get --only $MIX_ENV
    - mix loadpaths
  artifacts:
    paths:
      - .mix
      - _build
      - deps
      - mix.lock
  cache:
    paths:
      - .mix
      - _build
      - deps
    key:
      files:
        - mix.lock

lint:elixir:
  stage: test
  image: $BUILDER_IMAGE
  dependencies: [deps:elixir]
  script:
    - make lint

test:elixir:
  stage: test
  image: $BUILDER_IMAGE
  services: [postgres:14-alpine]
  dependencies: [deps:elixir]
  variables:
    FF_NETWORK_PER_BUILD: 1
    POSTGRES_HOST: postgres
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: postgres
  script:
    - make test

release:
  stage: release
  image: alpine:latest
  before_script:
    - apk add --no-cache curl
    - curl -L https://fly.io/install.sh | sh
  script:
    - /root/.fly/bin/flyctl deploy --detach --build-arg BUILDER_IMAGE=$BUILDER_IMAGE --build-arg ELIXIR_VERSION=$ELIXIR_VERSION --build-arg OTP_VERSION=$OTP_VERSION --build-arg DEBIAN_VERSION=$DEBIAN_VERSION
  only:
    - develop
